!function(t){var e={};function o(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=t,o.c=e,o.d=function(t,e,n){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)o.d(n,r,function(e){return t[e]}.bind(null,r));return n},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=3)}([function(t,e){t.exports=React},function(t,e,o){},function(t,e,o){"use strict";var n,r=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])},function(t,e){function o(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)});Object.defineProperty(e,"__esModule",{value:!0});var i=o(0);o(1);var a=function(t){function e(e){var o=t.call(this,e)||this;return o.handleKeyUp=o.handleKeyUp.bind(o),o.handleOutsideClick=o.handleOutsideClick.bind(o),o}return r(e,t),e.prototype.componentDidMount=function(){window.addEventListener("keyup",this.handleKeyUp,!1),document.addEventListener("click",this.handleOutsideClick,!1)},e.prototype.componentWillUnmount=function(){window.removeEventListener("keyup",this.handleKeyUp,!1),document.removeEventListener("click",this.handleOutsideClick,!1)},e.prototype.handleKeyUp=function(t){this.props.onCloseRequest},e.prototype.handleOutsideClick=function(t){this.props.onCloseRequest},e.prototype.render=function(){var t=this,e=this.props,o=e.onCloseRequest,n=e.children;e.classes;return i.createElement("div",{className:"modal-redaction"},i.createElement("div",{className:"modal",ref:function(e){return t.modal=e}},i.createElement("div",{className:"modal-content"},n)),i.createElement("button",{type:"button",className:"modal-close-button",onClick:o}))},e}(i.Component);e.default=a},function(t,e,o){"use strict";function n(t){for(var o in t)e.hasOwnProperty(o)||(e[o]=t[o])}Object.defineProperty(e,"__esModule",{value:!0}),n(o(4)),n(o(2))},function(t,e,o){"use strict";var n,r=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])},function(t,e){function o(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)});Object.defineProperty(e,"__esModule",{value:!0});var i=o(0);o(1);var a=o(2),l=function(t){function e(e){var o=t.call(this,e)||this;o.componentId="",o.flowKey="",o.attributes={},o.modalShown=!1,o.componentId=e.id,o.flowKey=e.flowKey;var n=manywho.model.getComponent(o.props.id,o.props.flowKey);if(n.attributes)for(var r in n.attributes)o.attributes[r]=n.attributes[r];return o}return r(e,t),e.prototype.componentDidMount=function(){this.forceUpdate()},e.prototype.componentDidUpdate=function(){},e.prototype.getAttribute=function(t){return this.attributes[t]?this.attributes[t]:null},e.prototype.render=function(){var t,e=manywho.model.getComponent(this.componentId,this.flowKey),o=manywho.state.getComponent(this.componentId,this.flowKey),n=(e.width,e.height,this.getAttribute("Icon")||"wrench"),r=parseInt(this.getAttribute("IconFontSizePoints")||"18"),l=this.getAttribute("IconTooltip")||"Click",c=this.getAttribute("IconColour")||"#000000",s=this.getAttribute("PopupTitle")||"",u=this.getAttribute("PopupCancelButton")||"Close",p=o.contentValue;p={__html:o.contentValue},this.modalShown&&(t=i.createElement(a.default,{onCloseRequest:this.hidePopup.bind(this)},i.createElement("div",{className:"modal-dialog"},i.createElement("div",{className:"modal-dialog-header"},i.createElement("div",{style:{float:"left"}},i.createElement("span",{className:"modal-dialog-header-title"},s)),i.createElement("div",{style:{float:"right"}})),i.createElement("div",{className:"modal-dialog-body"},i.createElement("div",{dangerouslySetInnerHTML:p})),i.createElement("div",{className:"modal-dialog-button-bar"},i.createElement("button",{className:"modal-dialog-button-bar-button",title:u,onClick:this.hidePopup.bind(this)},"Cancel")))));var d="glyphicon glyphicon-"+n+" popup-info-icon",f={"font-size":r,color:c};return i.createElement("div",{className:"popup-info"},i.createElement("span",{className:d,style:f,title:l,onClick:this.showPopup.bind(this)}),t)},e.prototype.showPopup=function(){this.modalShown=!0,this.forceUpdate()},e.prototype.hidePopup=function(t){this.modalShown=!1,this.forceUpdate()},e}(i.Component);manywho.component.register("PopupInfo",l),e.default=l}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,